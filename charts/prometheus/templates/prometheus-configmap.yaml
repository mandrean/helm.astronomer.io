################################
## Prometheus ConfigMap
#################################
kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{ .Release.Name }}-prometheus"
  labels:
    tier: monitoring
    component: prometheus
    release: {{ .Release.Name }}
    workspace: {{ .Values.workspace }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
data:
  prometheus.yaml: |-
    global:
      scrape_interval: 5s
      evaluation_interval: 30s

    scrape_configs:
      - job_name: airflow
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - {{ .Release.Namespace }}
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

      - job_name: kubernetes-nodes-cadvisor
        scrape_interval: 10s
        scrape_timeout: 10s
        scheme: https  # remove if you want to scrape metrics on insecure port
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          # Only for Kubernetes ^1.7.3.
          # See: https://github.com/prometheus/prometheus/issues/2916
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
        metric_relabel_configs:
          - action: replace
            source_labels: [id]
            regex: '^/machine\.slice/machine-rkt\\x2d([^\\]+)\\.+/([^/]+)\.service$'
            target_label: rkt_container_name
            replacement: '${2}-${1}'
          - action: replace
            source_labels: [id]
            regex: '^/system\.slice/(.+)\.service$'
            target_label: systemd_service_name
            replacement: '${1}'

            # Only keep metrics from the platforms namespace
          - action: keep
            source_labels: [namespace]
            regex: "{{ .Release.Namespace }}"

            # This will patch up most metrics
          - source_labels: [container_name]
            regex: "^(.*)-(.*)$"
            replacement: "$1 $2"
            target_label: component_name

          - source_labels: [pod_name]
            regex: "^.*-.*-(.*)$"
            replacement: "$1"
            target_label: component_instance

            # Network level metrics are exposed at the POD level
            # Deployment (others) format
          - source_labels: [__name__, container_name, pod_name]
            regex: "container_network_.*;(.*)-(.*)-([0-9a-z]{5,10}-[0-9a-z]{5})$"
            replacement: "$1 $2"
            target_label: component_name

          - source_labels: [__name__, container_name, pod_name]
            regex: "container_network_.*;(.*)-(.*)-([0-9a-z]{5,10}-[0-9a-z]{5})$"
            replacement: "$3"
            target_label: component_instance

            # StatefulSet (workers) format
          - source_labels: [__name__, pod_name]
            regex: "^container_network_.*;(.*)-(.*)-([0-9]+)$"
            replacement: "$1 $2"
            target_label: component_name

          - source_labels: [__name__, pod_name]
            regex: "^container_network_.*;(.*)-(.*)-([0-9]+)$"
            replacement: "$3"
            target_label: component_instance
